<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
    	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd http://www.springframework.org/schema/data/mongo">

	<aop:aspectj-autoproxy />

	<!-- <bean id="loggingAspect" class="com.fasoo.scdrm.aspect.LoggingAspect"/> -->

	<!-- enable autowire -->
	<context:annotation-config />

	<context:component-scan base-package="kr.co.rudaks" />

	<tx:annotation-driven />

	<cache:annotation-driven cache-manager="cacheManager" />
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager">
			<bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
				<property name="configLocation" value="/WEB-INF/ehcache.xml"></property>
			</bean>
		</property>
	</bean>

	<aop:config>
		<aop:advisor pointcut="bean(*Service)" advice-ref="transactionAdvice" />
	</aop:config>

	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="exceptionPut" propagation="REQUIRES_NEW" />
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<mvc:annotation-driven />

	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<bean id="placeHolder"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>

	<!-- <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource" 
		> <property name="basenames"> <list> <value>/WEB-INF/messages/message</value> 
		</list> </property> <property name="defaultEncoding" value="UTF-8" /> <property 
		name="cacheSeconds"> <value>60</value> </property> </bean> -->

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="5120000" /> <!-- 5M -->
	</bean>

	<bean id="dataSource" class="org.apache.ibatis.datasource.pooled.PooledDataSource">
		<property name="driver" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="poolPingQuery" value="select 1" />
		<property name="poolPingEnabled" value="true" />
		<property name="poolPingConnectionsNotUsedFor" value="7200000" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="kr.co.rudaks.web" />
	</bean>

	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="kr.co.rudaks.web.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
     <constructor-arg name="mongo" ref="mongo"/>
     <constructor-arg name="databaseName" value="rudaks"/>
   </bean>

   <!-- Factory bean that creates the Mongo instance -->
   <bean id="mongo" class="org.springframework.data.mongodb.core.MongoFactoryBean">
     <property name="host" value="localhost"/>
   </bean>

   <!-- Use this post processor to translate any MongoExceptions thrown in @Repository annotated classes -->
   <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
   
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/*" />
			<mvc:mapping path="/*/**" />
			<bean class="kr.co.rudaks.web.interceptor.HandlerInterceptor" />
		</mvc:interceptor>

		<mvc:interceptor>
			<mvc:mapping path="/post-modify/*" />
			<mvc:mapping path="/post-delete/*" />
			<mvc:mapping path="/upload-attach" />
			<bean class="kr.co.rudaks.web.interceptor.LoginCheckHandlerInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<mvc:view-controller path="/" view-name="home" />

</beans>
